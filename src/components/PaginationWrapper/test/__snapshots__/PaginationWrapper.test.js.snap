// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Components) PaginationWrapper Should render component properly 1`] = `
<PaginationWrapper
  options={
    Array [
      Object {
        "filter": [Function],
      },
    ]
  }
>
  <div>
    <PaginationRow
      options={
        Array [
          Object {
            "filter": [Function],
          },
        ]
      }
    >
      <div
        className="row"
      >
        <div
          className="col-sm-3 col-xs-6"
        >
          <div
            className="additionalComponentWrapper"
          >
            <_class
              options={
                Array [
                  Object {
                    "filter": [Function],
                  },
                ]
              }
            >
              <Select
                addLabelText="Add \\"{label}\\"?"
                arrowRenderer={[Function]}
                autosize={true}
                backspaceRemoves={true}
                backspaceToRemoveMessage="Press backspace to remove {label}"
                clearAllText="Clear all"
                clearRenderer={[Function]}
                clearValueText="Clear value"
                clearable={false}
                deleteRemoves={true}
                delimiter=","
                disabled={false}
                escapeClearsValue={true}
                filterOptions={[Function]}
                ignoreAccents={true}
                ignoreCase={true}
                inputProps={Object {}}
                isLoading={false}
                joinValues={false}
                labelKey="label"
                matchPos="any"
                matchProp="any"
                menuBuffer={0}
                menuRenderer={[Function]}
                multi={false}
                noResultsText="No results found"
                onBlurResetsInput={true}
                onCloseResetsInput={true}
                optionComponent={[Function]}
                options={
                  Array [
                    Object {
                      "filter": [Function],
                    },
                  ]
                }
                pageSize={5}
                placeholder="Select..."
                required={false}
                scrollMenuIntoView={true}
                searchable={true}
                simpleValue={false}
                tabSelectsValue={true}
                valueComponent={[Function]}
                valueKey="value"
              >
                <div
                  className="Select Select--single is-searchable"
                >
                  <div
                    className="Select-control"
                    onKeyDown={[Function]}
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                  >
                    <span
                      className="Select-multi-value-wrapper"
                      id="react-select-2--value"
                    >
                      <div
                        className="Select-placeholder"
                      >
                        Select...
                      </div>
                      <Component
                        aria-activedescendant="react-select-2--value"
                        aria-expanded="false"
                        aria-haspopup="false"
                        aria-owns=""
                        className="Select-input"
                        minWidth="5"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={false}
                        role="combobox"
                        value=""
                      >
                        <div
                          className="Select-input"
                          style={
                            Object {
                              "display": "inline-block",
                            }
                          }
                        >
                          <input
                            aria-activedescendant="react-select-2--value"
                            aria-expanded="false"
                            aria-haspopup="false"
                            aria-owns=""
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={false}
                            role="combobox"
                            style={
                              Object {
                                "boxSizing": "content-box",
                                "width": "5px",
                              }
                            }
                            value=""
                          />
                          <div
                            style={
                              Object {
                                "height": 0,
                                "left": 0,
                                "overflow": "scroll",
                                "position": "absolute",
                                "top": 0,
                                "visibility": "hidden",
                                "whiteSpace": "pre",
                              }
                            }
                          />
                        </div>
                      </Component>
                    </span>
                    <span
                      className="Select-arrow-zone"
                      onMouseDown={[Function]}
                    >
                      <span
                        className="Select-arrow"
                        onMouseDown={[Function]}
                      />
                    </span>
                  </div>
                </div>
              </Select>
            </_class>
          </div>
        </div>
        <div
          className="col-lg-6 col-sm-4 col-xs-6"
        >
          <_class>
            <div
              className="CountFilter"
            >
              <span>
                Showing
              </span>
              <_class
                options={
                  Array [
                    Object {
                      "label": 10,
                      "value": 10,
                    },
                    Object {
                      "label": 25,
                      "value": 25,
                    },
                    Object {
                      "label": 50,
                      "value": 50,
                    },
                    Object {
                      "label": 100,
                      "value": 100,
                    },
                  ]
                }
              >
                <Select
                  addLabelText="Add \\"{label}\\"?"
                  arrowRenderer={[Function]}
                  autosize={true}
                  backspaceRemoves={true}
                  backspaceToRemoveMessage="Press backspace to remove {label}"
                  clearAllText="Clear all"
                  clearRenderer={[Function]}
                  clearValueText="Clear value"
                  clearable={false}
                  deleteRemoves={true}
                  delimiter=","
                  disabled={false}
                  escapeClearsValue={true}
                  filterOptions={[Function]}
                  ignoreAccents={true}
                  ignoreCase={true}
                  inputProps={Object {}}
                  isLoading={false}
                  joinValues={false}
                  labelKey="label"
                  matchPos="any"
                  matchProp="any"
                  menuBuffer={0}
                  menuRenderer={[Function]}
                  multi={false}
                  noResultsText="No results found"
                  onBlurResetsInput={true}
                  onChange={[Function]}
                  onCloseResetsInput={true}
                  optionComponent={[Function]}
                  options={
                    Array [
                      Object {
                        "label": 10,
                        "value": 10,
                      },
                      Object {
                        "label": 25,
                        "value": 25,
                      },
                      Object {
                        "label": 50,
                        "value": 50,
                      },
                      Object {
                        "label": 100,
                        "value": 100,
                      },
                    ]
                  }
                  pageSize={5}
                  placeholder="Select..."
                  required={false}
                  scrollMenuIntoView={true}
                  searchable={false}
                  simpleValue={false}
                  tabSelectsValue={true}
                  value={
                    Object {
                      "label": undefined,
                    }
                  }
                  valueComponent={[Function]}
                  valueKey="value"
                >
                  <div
                    className="Select Select--single has-value"
                  >
                    <div
                      className="Select-control"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                    >
                      <span
                        className="Select-multi-value-wrapper"
                        id="react-select-3--value"
                      >
                        <Value
                          disabled={false}
                          id="react-select-3--value-item"
                          instancePrefix="react-select-3-"
                          onClick={null}
                          value={
                            Object {
                              "label": undefined,
                            }
                          }
                        >
                          <div
                            className="Select-value"
                          >
                            <span
                              aria-selected="true"
                              className="Select-value-label"
                              id="react-select-3--value-item"
                              role="option"
                            />
                          </div>
                        </Value>
                        <div
                          aria-activedescendant="react-select-3--value"
                          aria-expanded={false}
                          aria-owns=""
                          aria-readonly="false"
                          className="Select-input"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          role="combobox"
                          style={
                            Object {
                              "border": 0,
                              "display": "inline-block",
                              "width": 1,
                            }
                          }
                          tabIndex={0}
                        />
                      </span>
                      <span
                        className="Select-arrow-zone"
                        onMouseDown={[Function]}
                      >
                        <span
                          className="Select-arrow"
                          onMouseDown={[Function]}
                        />
                      </span>
                    </div>
                  </div>
                </Select>
              </_class>
              <span>
                of 
                 
              </span>
            </div>
          </_class>
        </div>
        <div
          className="col-lg-3 col-sm-5 col-xs-12"
        >
          <div
            className="Pagination"
          >
            <Pagination
              activePage={1}
              firstPageText="«"
              innerClass="pagination"
              itemsCountPerPage={10}
              lastPageText="»"
              linkClass=""
              nextPageText="⟩"
              onChange={[Function]}
              pageRangeDisplayed={5}
              prevPageText="⟨"
              totalItemsCount={0}
            >
              <ul
                className="pagination"
              >
                <Page
                  activeClass="active"
                  disabledClass="disabled"
                  isActive={false}
                  isDisabled={false}
                  linkClass=""
                  onClick={[Function]}
                  pageNumber={1}
                  pageText="«"
                >
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    <a
                      className=""
                      href="#"
                    >
                      «
                    </a>
                  </li>
                </Page>
                <Page
                  activeClass="active"
                  disabledClass="disabled"
                  isActive={false}
                  isDisabled={true}
                  linkClass=""
                  onClick={[Function]}
                  pageNumber={-1}
                  pageText="⟨"
                >
                  <li
                    className="disabled"
                    onClick={[Function]}
                  >
                    <a
                      className=""
                      href="#"
                    >
                      ⟨
                    </a>
                  </li>
                </Page>
                <Page
                  activeClass="active"
                  disabledClass="disabled"
                  isActive={false}
                  isDisabled={true}
                  linkClass=""
                  onClick={[Function]}
                  pageNumber={1}
                  pageText="⟩"
                >
                  <li
                    className="disabled"
                    onClick={[Function]}
                  >
                    <a
                      className=""
                      href="#"
                    >
                      ⟩
                    </a>
                  </li>
                </Page>
                <Page
                  activeClass="active"
                  disabledClass="disabled"
                  isActive={false}
                  isDisabled={true}
                  linkClass=""
                  onClick={[Function]}
                  pageNumber={0}
                  pageText="»"
                >
                  <li
                    className="disabled"
                    onClick={[Function]}
                  >
                    <a
                      className=""
                      href="#"
                    >
                      »
                    </a>
                  </li>
                </Page>
              </ul>
            </Pagination>
          </div>
        </div>
      </div>
    </PaginationRow>
    <div
      className="row"
    >
      <div
        className="table-responsive"
      />
    </div>
    <PaginationRow
      options={
        Array [
          Object {
            "filter": [Function],
          },
        ]
      }
    >
      <div
        className="row"
      >
        <div
          className="col-sm-3 col-xs-6"
        >
          <div
            className="additionalComponentWrapper"
          >
            <_class
              options={
                Array [
                  Object {
                    "filter": [Function],
                  },
                ]
              }
            >
              <Select
                addLabelText="Add \\"{label}\\"?"
                arrowRenderer={[Function]}
                autosize={true}
                backspaceRemoves={true}
                backspaceToRemoveMessage="Press backspace to remove {label}"
                clearAllText="Clear all"
                clearRenderer={[Function]}
                clearValueText="Clear value"
                clearable={false}
                deleteRemoves={true}
                delimiter=","
                disabled={false}
                escapeClearsValue={true}
                filterOptions={[Function]}
                ignoreAccents={true}
                ignoreCase={true}
                inputProps={Object {}}
                isLoading={false}
                joinValues={false}
                labelKey="label"
                matchPos="any"
                matchProp="any"
                menuBuffer={0}
                menuRenderer={[Function]}
                multi={false}
                noResultsText="No results found"
                onBlurResetsInput={true}
                onCloseResetsInput={true}
                optionComponent={[Function]}
                options={
                  Array [
                    Object {
                      "filter": [Function],
                    },
                  ]
                }
                pageSize={5}
                placeholder="Select..."
                required={false}
                scrollMenuIntoView={true}
                searchable={true}
                simpleValue={false}
                tabSelectsValue={true}
                valueComponent={[Function]}
                valueKey="value"
              >
                <div
                  className="Select Select--single is-searchable"
                >
                  <div
                    className="Select-control"
                    onKeyDown={[Function]}
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                  >
                    <span
                      className="Select-multi-value-wrapper"
                      id="react-select-4--value"
                    >
                      <div
                        className="Select-placeholder"
                      >
                        Select...
                      </div>
                      <Component
                        aria-activedescendant="react-select-4--value"
                        aria-expanded="false"
                        aria-haspopup="false"
                        aria-owns=""
                        className="Select-input"
                        minWidth="5"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={false}
                        role="combobox"
                        value=""
                      >
                        <div
                          className="Select-input"
                          style={
                            Object {
                              "display": "inline-block",
                            }
                          }
                        >
                          <input
                            aria-activedescendant="react-select-4--value"
                            aria-expanded="false"
                            aria-haspopup="false"
                            aria-owns=""
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={false}
                            role="combobox"
                            style={
                              Object {
                                "boxSizing": "content-box",
                                "width": "5px",
                              }
                            }
                            value=""
                          />
                          <div
                            style={
                              Object {
                                "height": 0,
                                "left": 0,
                                "overflow": "scroll",
                                "position": "absolute",
                                "top": 0,
                                "visibility": "hidden",
                                "whiteSpace": "pre",
                              }
                            }
                          />
                        </div>
                      </Component>
                    </span>
                    <span
                      className="Select-arrow-zone"
                      onMouseDown={[Function]}
                    >
                      <span
                        className="Select-arrow"
                        onMouseDown={[Function]}
                      />
                    </span>
                  </div>
                </div>
              </Select>
            </_class>
          </div>
        </div>
        <div
          className="col-lg-6 col-sm-4 col-xs-6"
        >
          <_class>
            <div
              className="CountFilter"
            >
              <span>
                Showing
              </span>
              <_class
                options={
                  Array [
                    Object {
                      "label": 10,
                      "value": 10,
                    },
                    Object {
                      "label": 25,
                      "value": 25,
                    },
                    Object {
                      "label": 50,
                      "value": 50,
                    },
                    Object {
                      "label": 100,
                      "value": 100,
                    },
                  ]
                }
              >
                <Select
                  addLabelText="Add \\"{label}\\"?"
                  arrowRenderer={[Function]}
                  autosize={true}
                  backspaceRemoves={true}
                  backspaceToRemoveMessage="Press backspace to remove {label}"
                  clearAllText="Clear all"
                  clearRenderer={[Function]}
                  clearValueText="Clear value"
                  clearable={false}
                  deleteRemoves={true}
                  delimiter=","
                  disabled={false}
                  escapeClearsValue={true}
                  filterOptions={[Function]}
                  ignoreAccents={true}
                  ignoreCase={true}
                  inputProps={Object {}}
                  isLoading={false}
                  joinValues={false}
                  labelKey="label"
                  matchPos="any"
                  matchProp="any"
                  menuBuffer={0}
                  menuRenderer={[Function]}
                  multi={false}
                  noResultsText="No results found"
                  onBlurResetsInput={true}
                  onChange={[Function]}
                  onCloseResetsInput={true}
                  optionComponent={[Function]}
                  options={
                    Array [
                      Object {
                        "label": 10,
                        "value": 10,
                      },
                      Object {
                        "label": 25,
                        "value": 25,
                      },
                      Object {
                        "label": 50,
                        "value": 50,
                      },
                      Object {
                        "label": 100,
                        "value": 100,
                      },
                    ]
                  }
                  pageSize={5}
                  placeholder="Select..."
                  required={false}
                  scrollMenuIntoView={true}
                  searchable={false}
                  simpleValue={false}
                  tabSelectsValue={true}
                  value={
                    Object {
                      "label": undefined,
                    }
                  }
                  valueComponent={[Function]}
                  valueKey="value"
                >
                  <div
                    className="Select Select--single has-value"
                  >
                    <div
                      className="Select-control"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                    >
                      <span
                        className="Select-multi-value-wrapper"
                        id="react-select-5--value"
                      >
                        <Value
                          disabled={false}
                          id="react-select-5--value-item"
                          instancePrefix="react-select-5-"
                          onClick={null}
                          value={
                            Object {
                              "label": undefined,
                            }
                          }
                        >
                          <div
                            className="Select-value"
                          >
                            <span
                              aria-selected="true"
                              className="Select-value-label"
                              id="react-select-5--value-item"
                              role="option"
                            />
                          </div>
                        </Value>
                        <div
                          aria-activedescendant="react-select-5--value"
                          aria-expanded={false}
                          aria-owns=""
                          aria-readonly="false"
                          className="Select-input"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          role="combobox"
                          style={
                            Object {
                              "border": 0,
                              "display": "inline-block",
                              "width": 1,
                            }
                          }
                          tabIndex={0}
                        />
                      </span>
                      <span
                        className="Select-arrow-zone"
                        onMouseDown={[Function]}
                      >
                        <span
                          className="Select-arrow"
                          onMouseDown={[Function]}
                        />
                      </span>
                    </div>
                  </div>
                </Select>
              </_class>
              <span>
                of 
                 
              </span>
            </div>
          </_class>
        </div>
        <div
          className="col-lg-3 col-sm-5 col-xs-12"
        >
          <div
            className="Pagination"
          >
            <Pagination
              activePage={1}
              firstPageText="«"
              innerClass="pagination"
              itemsCountPerPage={10}
              lastPageText="»"
              linkClass=""
              nextPageText="⟩"
              onChange={[Function]}
              pageRangeDisplayed={5}
              prevPageText="⟨"
              totalItemsCount={0}
            >
              <ul
                className="pagination"
              >
                <Page
                  activeClass="active"
                  disabledClass="disabled"
                  isActive={false}
                  isDisabled={false}
                  linkClass=""
                  onClick={[Function]}
                  pageNumber={1}
                  pageText="«"
                >
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    <a
                      className=""
                      href="#"
                    >
                      «
                    </a>
                  </li>
                </Page>
                <Page
                  activeClass="active"
                  disabledClass="disabled"
                  isActive={false}
                  isDisabled={true}
                  linkClass=""
                  onClick={[Function]}
                  pageNumber={-1}
                  pageText="⟨"
                >
                  <li
                    className="disabled"
                    onClick={[Function]}
                  >
                    <a
                      className=""
                      href="#"
                    >
                      ⟨
                    </a>
                  </li>
                </Page>
                <Page
                  activeClass="active"
                  disabledClass="disabled"
                  isActive={false}
                  isDisabled={true}
                  linkClass=""
                  onClick={[Function]}
                  pageNumber={1}
                  pageText="⟩"
                >
                  <li
                    className="disabled"
                    onClick={[Function]}
                  >
                    <a
                      className=""
                      href="#"
                    >
                      ⟩
                    </a>
                  </li>
                </Page>
                <Page
                  activeClass="active"
                  disabledClass="disabled"
                  isActive={false}
                  isDisabled={true}
                  linkClass=""
                  onClick={[Function]}
                  pageNumber={0}
                  pageText="»"
                >
                  <li
                    className="disabled"
                    onClick={[Function]}
                  >
                    <a
                      className=""
                      href="#"
                    >
                      »
                    </a>
                  </li>
                </Page>
              </ul>
            </Pagination>
          </div>
        </div>
      </div>
    </PaginationRow>
  </div>
</PaginationWrapper>
`;
